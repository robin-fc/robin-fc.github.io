"use strict";(self.webpackChunkrobin_fc_github_io=self.webpackChunkrobin_fc_github_io||[]).push([[3185],{3159:(e,t,n)=>{n.d(t,{c:()=>a});var i=n(6355),r=4;function a(e){return(0,i.c)(e,r)}},3185:(e,t,n)=>{n.d(t,{diagram:()=>O});var i=n(4581),r=n(6355),a=n(3634),s=n(6246);const o="rect",d="rectWithTitle",l="statediagram",c=`${l}-state`,h="transition",g=`${h} note-edge`,f=`${l}-note`,u=`${l}-cluster`,p=`${l}-cluster-alt`,w="parent",b="note",y="----",v=`${y}${b}`,x=`${y}${w}`,m="fill:none",S="fill: #333",E="text",N="normal";let T={},C=0;function D(e="",t=0,n="",i=y){return`state-${e}${null!==n&&n.length>0?`${i}${n}`:""}-${t}`}const X=(e,t,n,r,s,l)=>{const h=n.id,y=function(e){return null==e?"":e.classes?e.classes.join(" "):""}(r[h]);if("root"!==h){let t=o;!0===n.start&&(t="start"),!1===n.start&&(t="end"),n.type!==i.D&&(t=n.type),T[h]||(T[h]={id:h,shape:t,description:a.f.sanitizeText(h,(0,a.c)()),classes:`${y} ${c}`});const r=T[h];n.description&&(Array.isArray(r.description)?(r.shape=d,r.description.push(n.description)):r.description.length>0?(r.shape=d,r.description===h?r.description=[n.description]:r.description=[r.description,n.description]):(r.shape=o,r.description=n.description),r.description=a.f.sanitizeTextOrArray(r.description,(0,a.c)())),1===r.description.length&&r.shape===d&&(r.shape=o),!r.type&&n.doc&&(a.l.info("Setting cluster for ",h,$(n)),r.type="group",r.dir=$(n),r.shape=n.type===i.a?"divider":"roundedWithTitle",r.classes=r.classes+" "+u+" "+(l?p:""));const s={labelStyle:"",shape:r.shape,labelText:r.description,classes:r.classes,style:"",id:h,dir:r.dir,domId:D(h,C),type:r.type,padding:15,centerLabel:!0};if(n.note){const t={labelStyle:"",shape:"note",labelText:n.note.text,classes:f,style:"",id:h+v+"-"+C,domId:D(h,C,b),type:r.type,padding:15},i={labelStyle:"",shape:"noteGroup",labelText:n.note.text,classes:r.classes,style:"",id:h+x,domId:D(h,C,w),type:"group",padding:0};C++;const a=h+x;e.setNode(a,i),e.setNode(t.id,t),e.setNode(h,s),e.setParent(h,a),e.setParent(t.id,a);let o=h,d=t.id;"left of"===n.note.position&&(o=t.id,d=h),e.setEdge(o,d,{arrowhead:"none",arrowType:"",style:m,labelStyle:"",classes:g,arrowheadStyle:S,labelpos:"c",labelType:E,thickness:N})}else e.setNode(h,s)}t&&"root"!==t.id&&(a.l.trace("Setting node ",h," to be child of its parent ",t.id),e.setParent(h,t.id)),n.doc&&(a.l.trace("Adding nodes children "),B(e,n,n.doc,r,s,!l))},B=(e,t,n,r,s,o)=>{a.l.trace("items",n),n.forEach((n=>{switch(n.stmt){case i.b:case i.D:X(e,t,n,r,s,o);break;case i.S:{X(e,t,n.state1,r,s,o),X(e,t,n.state2,r,s,o);const i={id:"edge"+C,arrowhead:"normal",arrowTypeEnd:"arrow_barb",style:m,labelStyle:"",label:a.f.sanitizeText(n.description,(0,a.c)()),arrowheadStyle:S,labelpos:"c",labelType:E,thickness:N,classes:h};e.setEdge(n.state1.id,n.state2.id,i,C),C++}}}))},$=(e,t=i.c)=>{let n=t;if(e.doc)for(let t=0;t<e.doc.length;t++){const i=e.doc[t];"dir"===i.stmt&&(n=i.value)}return n},k={setConf:function(e){const t=Object.keys(e);for(const n of t)e[n]},getClasses:function(e,t){return t.db.extract(t.db.getRootDocV2()),t.db.getClasses()},draw:async function(e,t,n,i){a.l.info("Drawing state diagram (v2)",t),T={},i.db.getDirection();const{securityLevel:d,state:c}=(0,a.c)(),h=c.nodeSpacing||50,g=c.rankSpacing||50;a.l.info(i.db.getRootDocV2()),i.db.extract(i.db.getRootDocV2()),a.l.info(i.db.getRootDocV2());const f=i.db.getStates(),u=new r.G({multigraph:!0,compound:!0}).setGraph({rankdir:$(i.db.getRootDocV2()),nodesep:h,ranksep:g,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));let p;X(u,void 0,i.db.getRootDocV2(),f,i.db,!0),"sandbox"===d&&(p=(0,a.j)("#i"+t));const w="sandbox"===d?(0,a.j)(p.nodes()[0].contentDocument.body):(0,a.j)("body"),b=w.select(`[id="${t}"]`),y=w.select("#"+t+" g");await(0,s.r)(y,u,["barb"],l,t),a.A.insertTitle(b,"statediagramTitleText",c.titleTopMargin,i.db.getDiagramTitle());const v=b.node().getBBox(),x=v.width+16,m=v.height+16;b.attr("class",l);const S=b.node().getBBox();(0,a.k)(b,m,x,c.useMaxWidth);const E=`${S.x-8} ${S.y-8} ${x} ${m}`;a.l.debug(`viewBox ${E}`),b.attr("viewBox",E);const N=document.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const e of N){const t=e.getBBox(),n=document.createElementNS("http://www.w3.org/2000/svg",o);n.setAttribute("rx",0),n.setAttribute("ry",0),n.setAttribute("width",t.width),n.setAttribute("height",t.height),e.insertBefore(n,e.firstChild)}}},O={parser:i.p,db:i.d,renderer:k,styles:i.s,init:e=>{e.state||(e.state={}),e.state.arrowMarkerAbsolute=e.arrowMarkerAbsolute,i.d.clear()}}},6246:(e,t,n)=>{n.d(t,{r:()=>T});var i=n(6355),r=n(3573),a=n(3159),s=n(6698),o=n(3634),d=n(1539);function l(e){var t={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:c(e),edges:h(e)};return(0,i.i)(e.graph())||(t.value=(0,a.c)(e.graph())),t}function c(e){return(0,r.m)(e.nodes(),(function(t){var n=e.node(t),r=e.parent(t),a={v:t};return(0,i.i)(n)||(a.value=n),(0,i.i)(r)||(a.parent=r),a}))}function h(e){return(0,r.m)(e.edges(),(function(t){var n=e.edge(t),r={v:t.v,w:t.w};return(0,i.i)(t.name)||(r.name=t.name),(0,i.i)(n)||(r.value=n),r}))}let g={},f={},u={};const p=(e,t)=>(o.l.trace("In isDescendant",t," ",e," = ",f[t].includes(e)),!!f[t].includes(e)),w=(e,t,n,i)=>{o.l.warn("Copying children of ",e,"root",i,"data",t.node(e),i);const r=t.children(e)||[];e!==i&&r.push(e),o.l.warn("Copying (nodes) clusterId",e,"nodes",r),r.forEach((r=>{if(t.children(r).length>0)w(r,t,n,i);else{const a=t.node(r);o.l.info("cp ",r," to ",i," with parent ",e),n.setNode(r,a),i!==t.parent(r)&&(o.l.warn("Setting parent",r,t.parent(r)),n.setParent(r,t.parent(r))),e!==i&&r!==e?(o.l.debug("Setting parent",r,e),n.setParent(r,e)):(o.l.info("In copy ",e,"root",i,"data",t.node(e),i),o.l.debug("Not Setting parent for node=",r,"cluster!==rootId",e!==i,"node!==clusterId",r!==e));const s=t.edges(r);o.l.debug("Copying Edges",s),s.forEach((r=>{o.l.info("Edge",r);const a=t.edge(r.v,r.w,r.name);o.l.info("Edge data",a,i);try{((e,t)=>(o.l.info("Descendants of ",t," is ",f[t]),o.l.info("Edge is ",e),e.v!==t&&e.w!==t&&(f[t]?f[t].includes(e.v)||p(e.v,t)||p(e.w,t)||f[t].includes(e.w):(o.l.debug("Tilt, ",t,",not in descendants"),!1))))(r,i)?(o.l.info("Copying as ",r.v,r.w,a,r.name),n.setEdge(r.v,r.w,a,r.name),o.l.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):o.l.info("Skipping copy of edge ",r.v,"--\x3e",r.w," rootId: ",i," clusterId:",e)}catch(e){o.l.error(e)}}))}o.l.debug("Removing node",r),t.removeNode(r)}))},b=(e,t)=>{const n=t.children(e);let i=[...n];for(const r of n)u[r]=e,i=[...i,...b(r,t)];return i},y=(e,t)=>{o.l.trace("Searching",e);const n=t.children(e);if(o.l.trace("Searching children of id ",e,n),n.length<1)return o.l.trace("This is a valid node",e),e;for(const i of n){const n=y(i,t);if(n)return o.l.trace("Found replacement for",e," => ",n),n}},v=e=>g[e]&&g[e].externalConnections&&g[e]?g[e].id:e,x=(e,t)=>{if(o.l.warn("extractor - ",t,l(e),e.children("D")),t>10)return void o.l.error("Bailing out");let n=e.nodes(),r=!1;for(const t of n){const n=e.children(t);r=r||n.length>0}if(r){o.l.debug("Nodes = ",n,t);for(const r of n)if(o.l.debug("Extracting node",r,g,g[r]&&!g[r].externalConnections,!e.parent(r),e.node(r),e.children("D")," Depth ",t),g[r])if(!g[r].externalConnections&&e.children(r)&&e.children(r).length>0){o.l.warn("Cluster without external connections, without a parent and with children",r,t);let n="TB"===e.graph().rankdir?"LR":"TB";g[r]&&g[r].clusterData&&g[r].clusterData.dir&&(n=g[r].clusterData.dir,o.l.warn("Fixing dir",g[r].clusterData.dir,n));const a=new i.G({multigraph:!0,compound:!0}).setGraph({rankdir:n,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));o.l.warn("Old graph before copy",l(e)),w(r,e,a,r),e.setNode(r,{clusterNode:!0,id:r,clusterData:g[r].clusterData,labelText:g[r].labelText,graph:a}),o.l.warn("New graph after copy node: (",r,")",l(a)),o.l.debug("Old graph after copy",l(e))}else o.l.warn("Cluster ** ",r," **not meeting the criteria !externalConnections:",!g[r].externalConnections," no parent: ",!e.parent(r)," children ",e.children(r)&&e.children(r).length>0,e.children("D"),t),o.l.debug(g);else o.l.debug("Not a cluster",r,t);n=e.nodes(),o.l.warn("New list of nodes",n);for(const i of n){const n=e.node(i);o.l.warn(" Now next level",i,n),n.clusterNode&&x(n.graph,t+1)}}else o.l.debug("Done, no node has children",e.nodes())},m=(e,t)=>{if(0===t.length)return[];let n=Object.assign(t);return t.forEach((t=>{const i=e.children(t),r=m(e,i);n=[...n,...r]})),n},S={rect:(e,t)=>{o.l.info("Creating subgraph rect for ",t.id,t);const n=(0,o.c)(),i=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),r=i.insert("rect",":first-child"),a=(0,o.p)(n.flowchart.htmlLabels),l=i.insert("g").attr("class","cluster-label"),c="markdown"===t.labelType?(0,d.a)(l,t.labelText,{style:t.labelStyle,useHtmlLabels:a}):l.node().appendChild((0,s.c)(t.labelText,t.labelStyle,void 0,!0));let h=c.getBBox();if((0,o.p)(n.flowchart.htmlLabels)){const e=c.children[0],t=(0,o.j)(c);h=e.getBoundingClientRect(),t.attr("width",h.width),t.attr("height",h.height)}const g=0*t.padding,f=g/2,u=t.width<=h.width+g?h.width+g:t.width;t.width<=h.width+g?t.diff=(h.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,o.l.trace("Data ",t,JSON.stringify(t)),r.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-u/2).attr("y",t.y-t.height/2-f).attr("width",u).attr("height",t.height+g);const{subGraphTitleTopMargin:p}=(0,s.g)(n);a?l.attr("transform",`translate(${t.x-h.width/2}, ${t.y-t.height/2+p})`):l.attr("transform",`translate(${t.x}, ${t.y-t.height/2+p})`);const w=r.node().getBBox();return t.width=w.width,t.height=w.height,t.intersect=function(e){return(0,s.i)(t,e)},i},roundedWithTitle:(e,t)=>{const n=(0,o.c)(),i=e.insert("g").attr("class",t.classes).attr("id",t.id),r=i.insert("rect",":first-child"),a=i.insert("g").attr("class","cluster-label"),d=i.append("rect"),l=a.node().appendChild((0,s.c)(t.labelText,t.labelStyle,void 0,!0));let c=l.getBBox();if((0,o.p)(n.flowchart.htmlLabels)){const e=l.children[0],t=(0,o.j)(l);c=e.getBoundingClientRect(),t.attr("width",c.width),t.attr("height",c.height)}c=l.getBBox();const h=0*t.padding,g=h/2,f=t.width<=c.width+t.padding?c.width+t.padding:t.width;t.width<=c.width+t.padding?t.diff=(c.width+0*t.padding-t.width)/2:t.diff=-t.padding/2,r.attr("class","outer").attr("x",t.x-f/2-g).attr("y",t.y-t.height/2-g).attr("width",f+h).attr("height",t.height+h),d.attr("class","inner").attr("x",t.x-f/2-g).attr("y",t.y-t.height/2-g+c.height-1).attr("width",f+h).attr("height",t.height+h-c.height-3);const{subGraphTitleTopMargin:u}=(0,s.g)(n);a.attr("transform",`translate(${t.x-c.width/2}, ${t.y-t.height/2-t.padding/3+((0,o.p)(n.flowchart.htmlLabels)?5:3)+u})`);const p=r.node().getBBox();return t.height=p.height,t.intersect=function(e){return(0,s.i)(t,e)},i},noteGroup:(e,t)=>{const n=e.insert("g").attr("class","note-cluster").attr("id",t.id),i=n.insert("rect",":first-child"),r=0*t.padding,a=r/2;i.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2-a).attr("width",t.width+r).attr("height",t.height+r).attr("fill","none");const o=i.node().getBBox();return t.width=o.width,t.height=o.height,t.intersect=function(e){return(0,s.i)(t,e)},n},divider:(e,t)=>{const n=e.insert("g").attr("class",t.classes).attr("id",t.id),i=n.insert("rect",":first-child"),r=0*t.padding,a=r/2;i.attr("class","divider").attr("x",t.x-t.width/2-a).attr("y",t.y-t.height/2).attr("width",t.width+r).attr("height",t.height+r);const o=i.node().getBBox();return t.width=o.width,t.height=o.height,t.diff=-t.padding/2,t.intersect=function(e){return(0,s.i)(t,e)},n}};let E={};const N=async(e,t,n,i,a,d)=>{o.l.info("Graph in recursive render: XXX",l(t),a);const c=t.graph().rankdir;o.l.trace("Dir in recursive render - dir:",c);const h=e.insert("g").attr("class","root");t.nodes()?o.l.info("Recursive render XXX",t.nodes()):o.l.info("No nodes found for",t),t.edges().length>0&&o.l.trace("Recursive edges",t.edge(t.edges()[0]));const f=h.insert("g").attr("class","clusters"),u=h.insert("g").attr("class","edgePaths"),p=h.insert("g").attr("class","edgeLabels"),w=h.insert("g").attr("class","nodes");await Promise.all(t.nodes().map((async function(e){const r=t.node(e);if(void 0!==a){const n=JSON.parse(JSON.stringify(a.clusterData));o.l.info("Setting data for cluster XXX (",e,") ",n,a),t.setNode(a.id,n),t.parent(e)||(o.l.trace("Setting parent",e,a.id),t.setParent(e,a.id,n))}if(o.l.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),r&&r.clusterNode){o.l.info("Cluster identified",e,r.width,t.node(e));const a=await N(w,r.graph,n,i,t.node(e),d),l=a.elem;(0,s.u)(r,l),r.diff=a.diff||0,o.l.info("Node bounds (abc123)",e,r,r.width,r.x,r.y),(0,s.s)(l,r),o.l.warn("Recursive render complete ",l,r)}else t.children(e).length>0?(o.l.info("Cluster - the non recursive path XXX",e,r.id,r,t),o.l.info(y(r.id,t)),g[r.id]={id:y(r.id,t),node:r}):(o.l.info("Node - the non recursive path",e,r.id,r),await(0,s.e)(w,t.node(e),c))}))),t.edges().forEach((function(e){const n=t.edge(e.v,e.w,e.name);o.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),o.l.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),o.l.info("Fix",g,"ids:",e.v,e.w,"Translating: ",g[e.v],g[e.w]),(0,s.f)(p,n)})),t.edges().forEach((function(e){o.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e))})),o.l.info("#############################################"),o.l.info("###                Layout                 ###"),o.l.info("#############################################"),o.l.info(t),(0,r.l)(t),o.l.info("Graph after layout:",l(t));let b=0;const{subGraphTitleTotalMargin:v}=(0,s.g)(d);return(e=>m(e,e.children()))(t).forEach((function(e){const n=t.node(e);o.l.info("Position "+e+": "+JSON.stringify(t.node(e))),o.l.info("Position "+e+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n&&n.clusterNode?(n.y+=v,(0,s.p)(n)):t.children(e).length>0?(n.height+=v,((e,t)=>{o.l.trace("Inserting cluster");const n=t.shape||"rect";E[t.id]=S[n](e,t)})(f,n),g[n.id].node=n):(n.y+=v/2,(0,s.p)(n))})),t.edges().forEach((function(e){const r=t.edge(e);o.l.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(r),r),r.points.forEach((e=>e.y+=v/2));const a=(0,s.h)(u,e,r,g,n,t,i);(0,s.j)(r,a)})),t.nodes().forEach((function(e){const n=t.node(e);o.l.info(e,n.type,n.diff),"group"===n.type&&(b=n.diff)})),{elem:h,diff:b}},T=async(e,t,n,i,r)=>{(0,s.a)(e,n,i,r),(0,s.b)(),(0,s.d)(),E={},f={},u={},g={},o.l.warn("Graph at first:",JSON.stringify(l(t))),(e=>{if(e){o.l.debug("Opting in, graph "),e.nodes().forEach((function(t){e.children(t).length>0&&(o.l.warn("Cluster identified",t," Replacement id in edges: ",y(t,e)),f[t]=b(t,e),g[t]={id:y(t,e),clusterData:e.node(t)})})),e.nodes().forEach((function(t){const n=e.children(t),i=e.edges();n.length>0?(o.l.debug("Cluster identified",t,f),i.forEach((e=>{e.v!==t&&e.w!==t&&p(e.v,t)^p(e.w,t)&&(o.l.warn("Edge: ",e," leaves cluster ",t),o.l.warn("Descendants of XXX ",t,": ",f[t]),g[t].externalConnections=!0)}))):o.l.debug("Not a cluster ",t,f)}));for(let t of Object.keys(g)){const n=g[t].id,i=e.parent(n);i!==t&&g[i]&&!g[i].externalConnections&&(g[t].id=i)}e.edges().forEach((function(t){const n=e.edge(t);o.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),o.l.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let i=t.v,r=t.w;if(o.l.warn("Fix XXX",g,"ids:",t.v,t.w,"Translating: ",g[t.v]," --- ",g[t.w]),g[t.v]&&g[t.w]&&g[t.v]===g[t.w]){o.l.warn("Fixing and trixing link to self - removing XXX",t.v,t.w,t.name),o.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),i=v(t.v),r=v(t.w),e.removeEdge(t.v,t.w,t.name);const a=t.w+"---"+t.v;e.setNode(a,{domId:a,id:a,labelStyle:"",labelText:n.label,padding:0,shape:"labelRect",style:""});const s=structuredClone(n),d=structuredClone(n);s.label="",s.arrowTypeEnd="none",d.label="",s.fromCluster=t.v,d.toCluster=t.v,e.setEdge(i,a,s,t.name+"-cyclic-special"),e.setEdge(a,r,d,t.name+"-cyclic-special")}else if(g[t.v]||g[t.w]){if(o.l.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),i=v(t.v),r=v(t.w),e.removeEdge(t.v,t.w,t.name),i!==t.v){const r=e.parent(i);g[r].externalConnections=!0,n.fromCluster=t.v}if(r!==t.w){const i=e.parent(r);g[i].externalConnections=!0,n.toCluster=t.w}o.l.warn("Fix Replacing with XXX",i,r,t.name),e.setEdge(i,r,n,t.name)}})),o.l.warn("Adjusted Graph",l(e)),x(e,0),o.l.trace(g)}else o.l.debug("Opting out, no graph ")})(t),o.l.warn("Graph after:",JSON.stringify(l(t)));const a=(0,o.c)();await N(e,t,i,r,void 0,a)}}}]);